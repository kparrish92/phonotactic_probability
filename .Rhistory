mutate(log_freq = log(token_freq)) %>%
mutate(length = nchar(word))
corpus_german %>%
write.csv(here("data", "tidy", "corpus_german_tidy.csv"))
## loop bigram function in all corpora
## English
#### this loop might get stuck - I hit stop and it still created an output
new_df_eng <- character()
for(thisRun in 1:nrow(corpus_eng))
{
words <- bigram(corpus_eng$word[thisRun])
new_df_eng <- rbind(new_df_eng, words) %>%
as.data.frame()
}
new_df_eng %>%
write.csv(here("data", "tidy", "bigram_df_eng.csv"))
## Spanish
new_df_span <- character()
for(thisRun in 1:nrow(corpus_span))
{
words <- bigram(corpus_span$word[thisRun])
new_df_span <- rbind(new_df_span, words) %>%
as.data.frame()
}
new_df_span %>%
write.csv(here("data", "tidy", "bigram_df_span.csv"))
## German
new_df_german <- character()
for(thisRun in 1:nrow(corpus_german))
{
words <- bigram(corpus_german$word[thisRun])
new_df_german <- rbind(new_df_german, words) %>%
as.data.frame()
}
# 03 find phonotactic probability for a list of word ---------------------------
#
# Last update: 2021-09-02
#
# -----------------------------------------------------------------------------
# Source libs -----------------------------------------------------------------
source(here::here("scripts", "00_libs.R"))
source(here::here("scripts", "01_helpers.R"))
# -----------------------------------------------------------------------------
# read in data
bigram_data_sp <- read.csv(here("data", "tidy", "bigram_df_span.csv"))
bigram_data_en <- read.csv(here("data", "tidy", "bigram_df_eng.csv"))
bigram_data_ge <- read.csv(here("data", "tidy", "bigram_df_german.csv"))
span <- read.csv(here("data", "tidy", "corpus_span_tidy.csv"))
eng <- read.csv(here("data", "tidy", "corpus_eng_tidy.csv"))
german <- read.csv(here("data", "tidy", "corpus_german_tidy.csv"))
bigram_df_s <- left_join(bigram_data_sp, span, by = "word")
bigram_df_e <- left_join(bigram_data_en, eng, by = "word")
bigram_df_g <- left_join(bigram_data_ge, german, by = "word")
# create/read word list
stim_list <- c("pampe", "poche", "pomme", "patte", "pata", "that")
# loop word_list through spanish corpus
result_df_s <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_s[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_s, corpus = span)
result_df_s[iteration, 2] <- stim_list[iteration]
}
# loop word_list through english corpus
result_df_e <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_e[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_e, corpus = eng)
result_df_e[iteration, 2] <- stim_list[iteration]
}
# combine result and clean it up
span_clean <- result_df_s %>%
as.data.frame() %>%
mutate(source = "spanish") %>%
rename("prob" = V1) %>%
rename("word" = V2)
eng_clean <- result_df_e %>%
as.data.frame() %>%
mutate(source = "english") %>%
rename("prob" = V1) %>%
rename("word" = V2)
stim_df <- rbind(span_clean, eng_clean) %>%
pivot_wider(names_from = source, values_from = prob)
stim_df$spanish = as.numeric(stim_df$spanish)
stim_df$english = as.numeric(stim_df$english)
stim_df <- stim_df %>%
mutate(log_spanish = log(spanish), log_english = log(english))
view(stim_df)
# 03 find phonotactic probability for a list of word ---------------------------
#
# Last update: 2021-09-02
#
# -----------------------------------------------------------------------------
# Source libs -----------------------------------------------------------------
source(here::here("scripts", "00_libs.R"))
source(here::here("scripts", "01_helpers.R"))
# -----------------------------------------------------------------------------
# read in data
bigram_data_sp <- read.csv(here("data", "tidy", "bigram_df_span.csv"))
bigram_data_en <- read.csv(here("data", "tidy", "bigram_df_eng.csv"))
bigram_data_ge <- read.csv(here("data", "tidy", "bigram_df_german.csv"))
span <- read.csv(here("data", "tidy", "corpus_span_tidy.csv"))
eng <- read.csv(here("data", "tidy", "corpus_eng_tidy.csv"))
german <- read.csv(here("data", "tidy", "corpus_german_tidy.csv"))
bigram_df_s <- left_join(bigram_data_sp, span, by = "word")
bigram_df_e <- left_join(bigram_data_en, eng, by = "word")
bigram_df_g <- left_join(bigram_data_ge, german, by = "word")
# create/read word list
stim_list <- c("pampe", "poche", "pomme", "patte", "pata", "that")
# loop word_list through spanish corpus
result_df_s <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_s[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_s, corpus = span)
result_df_s[iteration, 2] <- stim_list[iteration]
}
# loop word_list through english corpus
result_df_e <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_e[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_e, corpus = eng)
result_df_e[iteration, 2] <- stim_list[iteration]
}
# combine result and clean it up
span_clean <- result_df_s %>%
as.data.frame() %>%
mutate(source = "spanish") %>%
rename("prob" = V1) %>%
rename("word" = V2)
eng_clean <- result_df_e %>%
as.data.frame() %>%
mutate(source = "english") %>%
rename("prob" = V1) %>%
rename("word" = V2)
stim_df <- rbind(span_clean, eng_clean) %>%
pivot_wider(names_from = source, values_from = prob)
stim_df$spanish = as.numeric(stim_df$spanish)
stim_df$english = as.numeric(stim_df$english)
stim_df <- stim_df %>%
mutate(log_spanish = log(spanish), log_english = log(english))
view(stim_df)
find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_e, corpus = eng)
find_bigram_prob(word = "word", bigram_df = bigram_df_e, corpus = eng)
View(eng)
merge_df <- read.csv(here("data", "tidy", "merge_df.csv"))
# 03 find phonotactic probability for a list of word ---------------------------
#
# Last update: 2021-09-02
#
# -----------------------------------------------------------------------------
# Source libs -----------------------------------------------------------------
source(here::here("scripts", "00_libs.R"))
source(here::here("scripts", "01_helpers.R"))
# -----------------------------------------------------------------------------
# read in data
bigram_data_sp <- read.csv(here("data", "tidy", "bigram_df_span.csv"))
bigram_data_en <- read.csv(here("data", "tidy", "bigram_df_eng.csv"))
bigram_data_ge <- read.csv(here("data", "tidy", "bigram_df_german.csv"))
span <- read.csv(here("data", "tidy", "corpus_span_tidy.csv"))
eng <- read.csv(here("data", "tidy", "corpus_eng_tidy.csv"))
german <- read.csv(here("data", "tidy", "corpus_german_tidy.csv"))
bigram_df_s <- left_join(bigram_data_sp, span, by = "word")
bigram_df_e <- left_join(bigram_data_en, eng, by = "word")
bigram_df_g <- left_join(bigram_data_ge, german, by = "word")
# create/read word list
#stim_list <- c("pampe", "poche", "pomme", "patte", "pata", "that")
stim_list <- merge_df$word[1:5]
# loop word_list through spanish corpus
result_df_s <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_s[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_s, corpus = span)
result_df_s[iteration, 2] <- stim_list[iteration]
}
# loop word_list through english corpus
result_df_e <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_e[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_e, corpus = eng)
result_df_e[iteration, 2] <- stim_list[iteration]
}
# combine result and clean it up
span_clean <- result_df_s %>%
as.data.frame() %>%
mutate(source = "spanish") %>%
rename("prob" = V1) %>%
rename("word" = V2)
eng_clean <- result_df_e %>%
as.data.frame() %>%
mutate(source = "english") %>%
rename("prob" = V1) %>%
rename("word" = V2)
stim_df <- rbind(span_clean, eng_clean) %>%
pivot_wider(names_from = source, values_from = prob)
stim_df$spanish = as.numeric(stim_df$spanish)
stim_df$english = as.numeric(stim_df$english)
stim_df <- stim_df %>%
mutate(log_spanish = log(spanish), log_english = log(english))
view(stim_df)
merge_df$word
# 03 find phonotactic probability for a list of word ---------------------------
#
# Last update: 2021-09-02
#
# -----------------------------------------------------------------------------
# Source libs -----------------------------------------------------------------
source(here::here("scripts", "00_libs.R"))
source(here::here("scripts", "01_helpers.R"))
# -----------------------------------------------------------------------------
# read in data
bigram_data_sp <- read.csv(here("data", "tidy", "bigram_df_span.csv"))
bigram_data_en <- read.csv(here("data", "tidy", "bigram_df_eng.csv"))
bigram_data_ge <- read.csv(here("data", "tidy", "bigram_df_german.csv"))
span <- read.csv(here("data", "tidy", "corpus_span_tidy.csv"))
eng <- read.csv(here("data", "tidy", "corpus_eng_tidy.csv"))
german <- read.csv(here("data", "tidy", "corpus_german_tidy.csv"))
bigram_df_s <- left_join(bigram_data_sp, span, by = "word")
bigram_df_e <- left_join(bigram_data_en, eng, by = "word")
bigram_df_g <- left_join(bigram_data_ge, german, by = "word")
# create/read word list
#stim_list <- c("pampe", "poche", "pomme", "patte", "pata", "that")
stim_list <- merge_df$word
# loop word_list through spanish corpus
result_df_s <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_s[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_s, corpus = span)
result_df_s[iteration, 2] <- stim_list[iteration]
}
# loop word_list through english corpus
result_df_e <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_e[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_e, corpus = eng)
result_df_e[iteration, 2] <- stim_list[iteration]
}
# combine result and clean it up
span_clean <- result_df_s %>%
as.data.frame() %>%
mutate(source = "spanish") %>%
rename("prob" = V1) %>%
rename("word" = V2)
eng_clean <- result_df_e %>%
as.data.frame() %>%
mutate(source = "english") %>%
rename("prob" = V1) %>%
rename("word" = V2)
stim_df <- rbind(span_clean, eng_clean) %>%
pivot_wider(names_from = source, values_from = prob)
stim_df$spanish = as.numeric(stim_df$spanish)
stim_df$english = as.numeric(stim_df$english)
stim_df <- stim_df %>%
mutate(log_spanish = log(spanish), log_english = log(english))
view(stim_df)
# 03 find phonotactic probability for a list of word ---------------------------
#
# Last update: 2021-09-02
#
# -----------------------------------------------------------------------------
# Source libs -----------------------------------------------------------------
source(here::here("scripts", "00_libs.R"))
source(here::here("scripts", "01_helpers.R"))
# -----------------------------------------------------------------------------
# read in data
bigram_data_sp <- read.csv(here("data", "tidy", "bigram_df_span.csv"))
bigram_data_en <- read.csv(here("data", "tidy", "bigram_df_eng.csv"))
bigram_data_ge <- read.csv(here("data", "tidy", "bigram_df_german.csv"))
span <- read.csv(here("data", "tidy", "corpus_span_tidy.csv"))
eng <- read.csv(here("data", "tidy", "corpus_eng_tidy.csv"))
german <- read.csv(here("data", "tidy", "corpus_german_tidy.csv"))
bigram_df_s <- left_join(bigram_data_sp, span, by = "word")
bigram_df_e <- left_join(bigram_data_en, eng, by = "word")
bigram_df_g <- left_join(bigram_data_ge, german, by = "word")
# create/read word list
#stim_list <- c("pampe", "poche", "pomme", "patte", "pata", "that")
stim_list <- merge_df$word[1:100]
# loop word_list through spanish corpus
result_df_s <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_s[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_s, corpus = span)
result_df_s[iteration, 2] <- stim_list[iteration]
}
# loop word_list through english corpus
result_df_e <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_e[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_e, corpus = eng)
result_df_e[iteration, 2] <- stim_list[iteration]
}
# combine result and clean it up
span_clean <- result_df_s %>%
as.data.frame() %>%
mutate(source = "spanish") %>%
rename("prob" = V1) %>%
rename("word" = V2)
eng_clean <- result_df_e %>%
as.data.frame() %>%
mutate(source = "english") %>%
rename("prob" = V1) %>%
rename("word" = V2)
stim_df <- rbind(span_clean, eng_clean) %>%
pivot_wider(names_from = source, values_from = prob)
stim_df$spanish = as.numeric(stim_df$spanish)
stim_df$english = as.numeric(stim_df$english)
stim_df <- stim_df %>%
mutate(log_spanish = log(spanish), log_english = log(english))
view(stim_df)
length(unique(merge_df$word))
unique %in% merge_df$word
unique(stim_df$word)
unique(merge_df$word)
stim_list <- unique(merge_df$word)
# 03 find phonotactic probability for a list of word ---------------------------
#
# Last update: 2021-09-02
#
# -----------------------------------------------------------------------------
# Source libs -----------------------------------------------------------------
source(here::here("scripts", "00_libs.R"))
source(here::here("scripts", "01_helpers.R"))
# -----------------------------------------------------------------------------
# read in data
bigram_data_sp <- read.csv(here("data", "tidy", "bigram_df_span.csv"))
bigram_data_en <- read.csv(here("data", "tidy", "bigram_df_eng.csv"))
bigram_data_ge <- read.csv(here("data", "tidy", "bigram_df_german.csv"))
span <- read.csv(here("data", "tidy", "corpus_span_tidy.csv"))
eng <- read.csv(here("data", "tidy", "corpus_eng_tidy.csv"))
german <- read.csv(here("data", "tidy", "corpus_german_tidy.csv"))
bigram_df_s <- left_join(bigram_data_sp, span, by = "word")
bigram_df_e <- left_join(bigram_data_en, eng, by = "word")
bigram_df_g <- left_join(bigram_data_ge, german, by = "word")
# create/read word list
#stim_list <- c("pampe", "poche", "pomme", "patte", "pata", "that")
stim_list <- unique(merge_df$word)
# loop word_list through spanish corpus
result_df_s <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_s[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_s, corpus = span)
result_df_s[iteration, 2] <- stim_list[iteration]
}
# loop word_list through english corpus
result_df_e <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_e[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_e, corpus = eng)
result_df_e[iteration, 2] <- stim_list[iteration]
}
# combine result and clean it up
span_clean <- result_df_s %>%
as.data.frame() %>%
mutate(source = "spanish") %>%
rename("prob" = V1) %>%
rename("word" = V2)
eng_clean <- result_df_e %>%
as.data.frame() %>%
mutate(source = "english") %>%
rename("prob" = V1) %>%
rename("word" = V2)
stim_df <- rbind(span_clean, eng_clean) %>%
pivot_wider(names_from = source, values_from = prob)
stim_df$spanish = as.numeric(stim_df$spanish)
stim_df$english = as.numeric(stim_df$english)
stim_df <- stim_df %>%
mutate(log_spanish = log(spanish), log_english = log(english))
view(stim_df)
stim_df$spanish = as.numeric(stim_df$spanish)
stim_df$spanish =
glimpse(stim_df)
stim_df$spanish = unlist(stim_df$spanish)
View(stim_df)
# 03 find phonotactic probability for a list of word ---------------------------
#
# Last update: 2021-09-02
#
# -----------------------------------------------------------------------------
# Source libs -----------------------------------------------------------------
source(here::here("scripts", "00_libs.R"))
source(here::here("scripts", "01_helpers.R"))
# -----------------------------------------------------------------------------
# read in data
bigram_data_sp <- read.csv(here("data", "tidy", "bigram_df_span.csv"))
bigram_data_en <- read.csv(here("data", "tidy", "bigram_df_eng.csv"))
bigram_data_ge <- read.csv(here("data", "tidy", "bigram_df_german.csv"))
span <- read.csv(here("data", "tidy", "corpus_span_tidy.csv"))
eng <- read.csv(here("data", "tidy", "corpus_eng_tidy.csv"))
german <- read.csv(here("data", "tidy", "corpus_german_tidy.csv"))
bigram_df_s <- left_join(bigram_data_sp, span, by = "word")
bigram_df_e <- left_join(bigram_data_en, eng, by = "word")
bigram_df_g <- left_join(bigram_data_ge, german, by = "word")
# create/read word list
#stim_list <- c("pampe", "poche", "pomme", "patte", "pata", "that")
stim_list <- unique(merge_df$word)
# loop word_list through spanish corpus
result_df_s <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_s[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_s, corpus = span)
result_df_s[iteration, 2] <- stim_list[iteration]
}
# loop word_list through english corpus
result_df_e <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_e[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_e, corpus = eng)
result_df_e[iteration, 2] <- stim_list[iteration]
}
# combine result and clean it up
span_clean <- result_df_s %>%
as.data.frame() %>%
mutate(source = "spanish") %>%
rename("prob" = V1) %>%
rename("word" = V2)
eng_clean <- result_df_e %>%
as.data.frame() %>%
mutate(source = "english") %>%
rename("prob" = V1) %>%
rename("word" = V2)
stim_df <- rbind(span_clean, eng_clean) %>%
pivot_wider(names_from = source, values_from = prob)
stim_df$spanish = unlist(stim_df$spanish)
merge_df <- read.csv(here("data", "tidy", "merge_df.csv"))
merge_df <- read.csv(here("data", "tidy", "merge_df.csv"))
# 03 find phonotactic probability for a list of word ---------------------------
#
# Last update: 2021-09-02
#
# -----------------------------------------------------------------------------
# Source libs -----------------------------------------------------------------
source(here::here("scripts", "00_libs.R"))
source(here::here("scripts", "01_helpers.R"))
# -----------------------------------------------------------------------------
# read in data
bigram_data_sp <- read.csv(here("data", "tidy", "bigram_df_span.csv"))
bigram_data_en <- read.csv(here("data", "tidy", "bigram_df_eng.csv"))
bigram_data_ge <- read.csv(here("data", "tidy", "bigram_df_german.csv"))
span <- read.csv(here("data", "tidy", "corpus_span_tidy.csv"))
eng <- read.csv(here("data", "tidy", "corpus_eng_tidy.csv"))
german <- read.csv(here("data", "tidy", "corpus_german_tidy.csv"))
bigram_df_s <- left_join(bigram_data_sp, span, by = "word")
bigram_df_e <- left_join(bigram_data_en, eng, by = "word")
bigram_df_g <- left_join(bigram_data_ge, german, by = "word")
# create/read word list
#stim_list <- c("pampe", "poche", "pomme", "patte", "pata", "that")
stim_list <- unique(merge_df$word)
# loop word_list through spanish corpus
result_df_s <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_s[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_s, corpus = span)
result_df_s[iteration, 2] <- stim_list[iteration]
}
# loop word_list through english corpus
result_df_e <- matrix(nrow = length(stim_list), ncol = 2)
for(iteration in 1:length(stim_list)){
result_df_e[iteration, 1] <- find_bigram_prob(word = stim_list[iteration], bigram_df = bigram_df_e, corpus = eng)
result_df_e[iteration, 2] <- stim_list[iteration]
}
# combine result and clean it up
span_clean <- result_df_s %>%
as.data.frame() %>%
mutate(source = "spanish") %>%
rename("prob" = V1) %>%
rename("word" = V2)
eng_clean <- result_df_e %>%
as.data.frame() %>%
mutate(source = "english") %>%
rename("prob" = V1) %>%
rename("word" = V2)
stim_df <- rbind(span_clean, eng_clean) %>%
pivot_wider(names_from = source, values_from = prob)
stim_df$spanish = unlist(stim_df$spanish)
result_df_s
span_clean <- result_df_s
View(span_clean)
span_clean <- result_df_s %>%
as.data.frame() %>%
mutate(source = "spanish") %>%
rename("prob" = V1) %>%
rename("word" = V2)
span_clean <- result_df_s %>%
as.data.frame()
span_clean <- result_df_s %>%
mutate(source = "spanish")
span_clean <- result_df_s %>%
rename("prob" = V1) %>%
rename("word" = V2)
span_clean <- result_df_s %>%
#as.data.frame() %>%
#mutate(source = "spanish") %>%
rename("prob" = V1) %>%
rename("word" = V2)
View(result_df_s)
result_df_s
stim_df <- rbind(span_clean, eng_clean)
stim_df <- rbind(span_clean, eng_clean) %>%
pivot_wider(names_from = source, values_from = prob)
# combine result and clean it up
span_clean <- result_df_s %>%
as.data.frame() %>%
mutate(source = "spanish") %>%
rename("prob" = V1) %>%
rename("word" = V2)
eng_clean <- result_df_e %>%
as.data.frame() %>%
mutate(source = "english") %>%
rename("prob" = V1) %>%
rename("word" = V2)
View(eng_clean)
View(span_clean)
span_clean %>%
mutate(log_spanish = log(prob)
span_clean %>%
mutate(log_spanish = log(prob)
span_clean %>%
mutate(log_spanish = log(prob))
span_clean %>%
mutate(log_spanish = log(prob))
glimpse(span_clean)
span_clean$prob <- as.numeric(span_clean$prob)
span_clean %>%
mutate(log_spanish = log(prob))
prob_df <- span_clean %>%
mutate(log_spanish = log(prob))
View(prob_df)
prob_df %>%
write.csv(here("data", "tidy", "prob_df.csv"))
